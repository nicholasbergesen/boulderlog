@model CreateClimbViewModel

@{
    var now = DateTime.Now;
    Model.TimeStamp = new DateTime(now.Year, now.Month, now.Day, now.Hour, now.Minute, 0, DateTimeKind.Local);
}

<h1>Add Climb</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="javascript:void(0)">
            <div class="d-flex align-items-center">
                <div class="pe-1">
                    @if (string.IsNullOrEmpty(Model.ImageId))
                    {
                        <canvas class="placeholder" id="canvas" width="250" height="250"></canvas>
                        <span></span>
                    }
                    else
                    {
                        <img src="/api/images/@Model.ImageId" width="250" height="250" id="imageTag" />
                        <canvas class="visually-hidden" id="canvas" width="250" height="250"></canvas>
                    }
                </div>
                <div>
                    <button id="open-camera-modal" class="btn btn-primary pt-1" data-bs-toggle="modal" data-bs-target="#cameraModal" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                            <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4z" />
                            <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0" />
                        </svg>
                    </button>
                    <input type="file" class="btn btn-primary visually-hidden" accept="image/*" id="file-image" />
                    <button type="button" class="btn btn-primary" id="get-image-from-file">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-upload" viewBox="0 0 16 16">
                            <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"></path>
                            <path d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708z"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </form>
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="RedirectToAction" />
            <input type="hidden" asp-for="CreatedByUserId" />
            <input type="hidden" asp-for="ImageId" />
            <input type="hidden" asp-for="TimeStamp" />
            <input type="hidden" asp-for="GradeId" id="gradeValue" />
            <input type="hidden" asp-for="HoldColor" id="holdColorValue" />

            <div class="form-group">
                <label asp-for="GymId" class="control-label"></label>
                <select asp-for="GymId" id="Gym" class="form-control" asp-items="ViewBag.Gym" onchange="getGymData()"></select>
                <span asp-validation-for="GymId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Wall" class="control-label"></label>
                <select asp-for="Wall" id="Wall" class="form-control" asp-items="ViewBag.Wall"></select>
                <span asp-validation-for="Wall" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <label asp-for="GradeId" class="control-label"></label>
                <div id="Grade">
                </div>
                <span asp-validation-for="GradeId" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <label asp-for="HoldColor" class="control-label"></label>
                <div>
                @foreach (var color in ViewBag.HoldColor)
                {
                    <input type='radio' class='btn-check' name='holdcolors' id='@color.ColorName' />
                    <label class="btn p-2 me-3 mt-3 border-3" style="background-color:@color.ColorHex;width:30px;height:30px" onclick="setSelection(event, '#holdColorValue')" for="@color.ColorName"></label>
                }
                </div>
                <span asp-validation-for="HoldColor" class="text-danger"></span>
            </div>
            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="cameraModal" tabindex="-1" aria-labelledby="cameraModallLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="cameraModallLabel">Camera</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <video id="video" width="250" height="250" autoplay="" playsinline=""></video>
            </div>
            <div class="modal-footer">
                <button type="button" id="capture-image" data-bs-dismiss="modal" class="btn btn-primary">Capture</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/climb-create.js" asp-append-version="true"></script>

<script>
    async function getGymData() {
        const request = new Request(`/api/gym/${@Model.GymId}`);
        let response = await fetch(request);
        let body = await response.json();

        $("#Grade input").remove();
        $("#Grade label").remove();
        $("#Wall option").remove();

        $.each(body.grade, function (i, v) {
            $("#Grade").append($(`<input type='radio' class='btn-check' name='colors' id='${v.id}' />`));
                $("#Grade").append($(`<label class='btn p-2 me-3 mt-3 border-3' style='background-color:${v.colorHex};width:30px;height:30px' onclick="setSelection(event, '#gradeValue')" for='${v.id}'></label>`));
        });

        $.each(body.wall, function (i, v) {
            $("#Wall").append($('<option></option>').val(v.text).html(v.text));
        });

        var urlParams = new URLSearchParams(window.location.search);
        const gradeId = urlParams.get("gradeId");
        const wall = urlParams.get("wall");

        if (gradeId) {
            $("#gradeValue").val(gradeId);
        }

        if (wall) {
            $(`#Wall option[value='${wall}']`).attr("selected", "selected");
        }
    }

    function setSelection(event, target) {
        $(target).val($(event.target).attr("for"));
    }

    getGymData();
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}